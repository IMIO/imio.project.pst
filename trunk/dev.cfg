[buildout]
extends =
    base.cfg
    versions-dev.cfg

allow-picked-versions = true

eggs +=
    plone.reload
#    Products.PDBDebugMode
    Products.DocFinderTab
    Products.ExternalEditor
    aws.zope2zcmldoc
    collective.profiler
    iw.debug

zcml +=
    iw.debug

parts +=
    testme
    testcore
    testpg
    testrf
    testee
    test_imio_helpers
    coverage
    coveragecore
    report

show-picked-versions = true

always-checkout = force
auto-checkout +=
[instance1]
recipe = plone.recipe.zope2instance
debug-mode = on
verbose-security = on

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${buildout:eggs}
    ${instance1:eggs}
    ${testme:eggs}

[test]
recipe = zc.recipe.testrunner
eggs =
    imio.project.core [test]
    ipdb
defaults = ['--auto-color', '--auto-progress']

[testme]
<= test
eggs =
    ${test:eggs}
    imio.project.pst [test]
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.project.pst']

[testcore]
<= test
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.project.core']

[testpg]
<= test
eggs =
    ${test:eggs}
    collective.contact.plonegroup [test]
initialization =
    sys.argv = sys.argv[:] + ['-s', 'collective.contact.plonegroup']

[testrf]
<= test
eggs =
    ${test:eggs}
    collective.z3cform.rolefield [test]
initialization =
    sys.argv = sys.argv[:] + ['-s', 'collective.z3cform.rolefield']

[testee]
<= test
eggs =
    ${test:eggs}
    collective.excelexport [test]
initialization =
    sys.argv = sys.argv[:] + ['-s', 'collective.excelexport']

[test_imio_helpers]
<= test
eggs =
    ${test:eggs}
    imio.helpers [test]
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.helpers']

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    sys.argv = sys.argv[:] + ['run', '--include=${buildout:directory}/src/imio/*', '-a', 'bin/testme']

[coveragecore]
<= coverage
scripts = coverage=coveragecore
initialization =
    sys.argv = sys.argv[:] + ['run', '--include=${buildout:directory}/src/imio.project.core/*', '-a', 'bin/testcore']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']
